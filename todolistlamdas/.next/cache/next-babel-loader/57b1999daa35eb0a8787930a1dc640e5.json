{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport produce from 'immer';\nimport nanoid from 'nanoid';\n\nvar todoslistReducer = function todoslistReducer(state, action) {\n  switch (action.type) {\n    case \"set-current\":\n      {\n        return produce(state, function (draft) {\n          draft.currentTodo = action.payload;\n        });\n      }\n\n    case \"add\":\n      {\n        return produce(state, function (draft) {\n          draft.todos.push(action.payload);\n        });\n      }\n\n    case \"update\":\n      {\n        var todoIndex = state.todos.findIndex(function (todo) {\n          return todo.id === action.payload.id;\n        });\n        if (todoIndex === -1) return state;\n        return produce(state, function (draft) {\n          draft.todos[todoIndex] = _objectSpread({}, action.payload);\n        });\n      }\n\n    case \"delete\":\n      {\n        var _todoIndex = state.todos.findIndex(function (todo) {\n          return todo.id === action.payload.id;\n        });\n\n        if (_todoIndex === -1) return state;\n        return produce(state, function (draft) {\n          draft.todos.splice(_todoIndex, 1);\n        });\n      }\n\n    default:\n      {\n        throw new Error(\"Unsupported action \".concat(JSON.stringify(action)));\n      }\n  }\n};\n\nexport default todoslistReducer;","map":{"version":3,"sources":["C:/Code/rnprojs/todolistlamdas/data/todolistReducer.js"],"names":["produce","nanoid","todoslistReducer","state","action","type","draft","currentTodo","payload","todos","push","todoIndex","findIndex","todo","id","splice","Error","JSON","stringify"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,IAAMC,gBAAgB,GAAI,SAApBA,gBAAoB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,eAAOL,OAAO,CAACG,KAAD,EAAQ,UAAAG,KAAK,EAAI;AAC7BA,UAAAA,KAAK,CAACC,WAAN,GAAoBH,MAAM,CAACI,OAA3B;AACD,SAFa,CAAd;AAGD;;AACD,SAAK,KAAL;AAAY;AACV,eAAOR,OAAO,CAACG,KAAD,EAAQ,UAAAG,KAAK,EAAI;AAC7BA,UAAAA,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAiBN,MAAM,CAACI,OAAxB;AACD,SAFa,CAAd;AAGD;;AACD,SAAK,QAAL;AAAe;AACb,YAAMG,SAAS,GAAGR,KAAK,CAACM,KAAN,CAAYG,SAAZ,CAChB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACI,OAAP,CAAeM,EAA/B;AAAA,SADY,CAAlB;AAGA,YAAIH,SAAS,KAAK,CAAC,CAAnB,EAAsB,OAAOR,KAAP;AACtB,eAAOH,OAAO,CAACG,KAAD,EAAQ,UAAAG,KAAK,EAAI;AAC7BA,UAAAA,KAAK,CAACG,KAAN,CAAYE,SAAZ,sBAA8BP,MAAM,CAACI,OAArC;AACD,SAFa,CAAd;AAGD;;AACD,SAAK,QAAL;AAAe;AACb,YAAMG,UAAS,GAAGR,KAAK,CAACM,KAAN,CAAYG,SAAZ,CAChB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACI,OAAP,CAAeM,EAA/B;AAAA,SADY,CAAlB;;AAGA,YAAIH,UAAS,KAAK,CAAC,CAAnB,EAAsB,OAAOR,KAAP;AACtB,eAAOH,OAAO,CAACG,KAAD,EAAQ,UAAAG,KAAK,EAAI;AAC7BA,UAAAA,KAAK,CAACG,KAAN,CAAYM,MAAZ,CAAmBJ,UAAnB,EAA8B,CAA9B;AACD,SAFa,CAAd;AAGD;;AAED;AAAS;AACP,cAAM,IAAIK,KAAJ,8BAAgCC,IAAI,CAACC,SAAL,CAAed,MAAf,CAAhC,EAAN;AACD;AAhCH;AAkCD,CAnCD;;AAqCA,eAAeF,gBAAf","sourcesContent":["import produce from 'immer';\r\nimport nanoid from 'nanoid';\r\n\r\nconst todoslistReducer  = (state, action) => {\r\n  switch (action.type) {\r\n    case \"set-current\": {\r\n      return produce(state, draft => {\r\n        draft.currentTodo = action.payload;\r\n      });\r\n    }\r\n    case \"add\": {\r\n      return produce(state, draft => {\r\n        draft.todos.push(action.payload);\r\n      });\r\n    }\r\n    case \"update\": {\r\n      const todoIndex = state.todos.findIndex(\r\n        todo => todo.id === action.payload.id\r\n      );\r\n      if (todoIndex === -1) return state;\r\n      return produce(state, draft => {\r\n        draft.todos[todoIndex] = { ...action.payload };\r\n      });\r\n    }\r\n    case \"delete\": {\r\n      const todoIndex = state.todos.findIndex(\r\n        todo => todo.id === action.payload.id\r\n      );\r\n      if (todoIndex === -1) return state;\r\n      return produce(state, draft => {\r\n        draft.todos.splice(todoIndex, 1);\r\n      });\r\n    }\r\n\r\n    default: {\r\n      throw new Error(`Unsupported action ${JSON.stringify(action)}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport default todoslistReducer;"]},"metadata":{},"sourceType":"module"}